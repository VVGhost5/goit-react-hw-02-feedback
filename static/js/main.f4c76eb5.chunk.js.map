{"version":3,"sources":["components/FeedbackButtons/Feedback.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackButtons/FeedbackButtons.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","data/buttons.js","App.js","index.js"],"names":["module","exports","FeedbackButtons","buttons","onHandleIncrement","className","styles","list","map","id","value","item","button","onClick","evt","Section","title","children","Statistics","state","totalFeedback","positiveFeedbackPercent","stateValuesArray","Object","keys","el","indexOf","Notification","message","notification","App","good","neutral","bad","handleIncrementFeedbackValue","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","positiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,gBCAzDD,EAAOC,QAAU,CAAC,KAAO,2B,qBCAzBD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,qKCoClBC,EAlCS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,kBAClC,OACE,qBAAKC,UAAU,UAAf,SACE,oBAAIA,UAAWC,IAAOC,KAAtB,SACGJ,EAAQK,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClB,OACE,oBAAIL,UAAWC,IAAOK,KAAtB,SACE,wBACED,MAAOA,EACPL,UAAWC,IAAOM,OAClBC,QAAS,SAACC,GACRV,EAAkBU,IAJtB,SAOGJ,KAR4BD,W,gBCQ9BM,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIZ,UAAWC,IAAOU,MAAtB,SAA8BA,IAC7BC,M,gBC4BQC,EAhCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,wBACpCC,EAAmBC,OAAOC,KAAKL,GACrC,OACE,qBAAKd,UAAU,UAAf,SACE,+BACGiB,EAAiBd,KAAI,SAACiB,GACrB,OACE,oBAAuCpB,UAAWC,IAAOK,KAAzD,SACE,iCACGc,EADH,KACSN,EAAMM,OAFRH,EAAiBI,QAAQD,OAOtC,oBAAgBpB,UAAWC,IAAOK,KAAlC,SACE,2CAAcS,MADR,SAIR,oBAA2Bf,UAAWC,IAAOK,KAA7C,SACE,uDAA0BU,EAA1B,SADM,0B,iBCVDM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGvB,UAAWC,IAAOuB,aAArB,SAAoCD,KCE9BzB,EANC,CACd,CAAEM,GAAI,EAAGC,MAAO,QAChB,CAAED,GAAI,EAAGC,MAAO,WAChB,CAAED,GAAI,EAAGC,MAAO,QCoDHoB,E,4MA/CbX,MAAQ,CACNY,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,6BAA+B,YAAiB,IACtCxB,EADqC,EAAbyB,OACxBzB,MACR,EAAK0B,UAAS,SAACC,GAAD,sBAAmB3B,EAAQ2B,EAAU3B,GAAS,O,EAG9D4B,mBAAqB,WAAO,IAAD,EACM,EAAKnB,MACpC,OAFyB,EACjBY,KADiB,EACXC,QADW,EACFC,K,EAIzBM,gCAAkC,WAAO,IAAD,EACP,EAAKpB,MAA5BY,EAD8B,EAC9BA,KACFS,EAA8BT,GAAQA,EAFN,EACxBC,QADwB,EACfC,KAC8C,IACrE,OAAOQ,KAAKC,MAAMF,I,uDAIlB,OACE,sBAAKnC,UAAU,YAAf,UACE,cAAC,EAAD,CAASW,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAASA,EACTC,kBAAmBuC,KAAKT,iCAG3BS,KAAKxB,MAAMY,MAAQY,KAAKxB,MAAMa,SAAWW,KAAKxB,MAAMc,IACnD,cAAC,EAAD,CAASjB,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,MAAOwB,KAAKxB,MACZC,cAAeuB,KAAKL,qBACpBjB,wBAAyBsB,KAAKJ,sCAIlC,cAAC,EAAD,CAAcX,QAAS,6B,GAzCfgB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f4c76eb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__2kiF3\",\"button\":\"Feedback_button__3bGOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__UCQ7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2c8vW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3A2Ia\"};","import styles from \"./Feedback.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackButtons = ({ buttons, onHandleIncrement }) => {\n  return (\n    <div className=\"wrapper\">\n      <ul className={styles.list}>\n        {buttons.map(({ id, value }) => {\n          return (\n            <li className={styles.item} key={id}>\n              <button\n                value={value}\n                className={styles.button}\n                onClick={(evt) => {\n                  onHandleIncrement(evt);\n                }}\n              >\n                {value}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nFeedbackButtons.propTypes = {\n  buttons: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      value: PropTypes.string,\n    })\n  ),\n  onHandleIncrement: PropTypes.func.isRequired,\n};\n\nexport default FeedbackButtons;\n","import styles from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import styles from \"./Statistics.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ state, totalFeedback, positiveFeedbackPercent }) => {\n  const stateValuesArray = Object.keys(state);\n  return (\n    <div className=\"wrapper\">\n      <ul>\n        {stateValuesArray.map((el) => {\n          return (\n            <li key={stateValuesArray.indexOf(el)} className={styles.item}>\n              <span>\n                {el}: {state[el]}\n              </span>\n            </li>\n          );\n        })}\n        <li key=\"total\" className={styles.item}>\n          <span>Total: {totalFeedback}</span>\n        </li>\n\n        <li key=\"positiveFeedback\" className={styles.item}>\n          <span>Positive feedback: {positiveFeedbackPercent} %</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  state: PropTypes.objectOf(PropTypes.number.isRequired),\n  totalFeedback: PropTypes.number.isRequired,\n  positiveFeedbackPercent: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import styles from \"./Notification.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p className={styles.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","const buttons = [\n  { id: 1, value: \"good\" },\n  { id: 2, value: \"neutral\" },\n  { id: 3, value: \"bad\" },\n];\n\nexport default buttons;\n","import React, { Component } from \"react\";\nimport FeedbackButtons from \"./components/FeedbackButtons/FeedbackButtons\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\nimport buttons from \"./data/buttons\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrementFeedbackValue = ({ target }) => {\n    const { value } = target;\n    this.setState((prevState) => ({ [value]: prevState[value] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const positiveFeedbackPercentage = (good / (good + neutral + bad)) * 100;\n    return Math.round(positiveFeedbackPercentage);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackButtons\n            buttons={buttons}\n            onHandleIncrement={this.handleIncrementFeedbackValue}\n          ></FeedbackButtons>\n        </Section>\n        {this.state.good || this.state.neutral || this.state.bad ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              state={this.state}\n              totalFeedback={this.countTotalFeedback()}\n              positiveFeedbackPercent={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          </Section>\n        ) : (\n          <Notification message={\"No feedback given\"}></Notification>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}